<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>Sixto y María Fernanda</title>
		<meta property="og:description" content="Una cordial invitación a la boda de María Fernanda Torres Oleas y Sixto Antonio La Mota Solórzano." />
		<meta property="og:image" content="https://sixto-y-maria.pages.dev/images/hero.webp" />
	</head>
	<body>
		<slot />
	</body>
</html>

<style is:global>
	:root {
		--green: #8BA386;
		--gray: #514D48;
	}
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
	@font-face {
		font-family: 'Brilliant';
		src: url('/fonts/brilliantdemo.woff') format('woff');
	}
	@font-face {
		font-family: 'Calibri';
		src: url('/fonts/calibri-regular.woff') format('woff');
	}
	@font-face {
		font-family: 'Calibri Bold';
		src: url('/fonts/calibri-bold.woff') format('woff');
	}
	@font-face {
		font-family: 'Myriad';
		src: url('/fonts/MyriadPro-Regular.woff') format('woff');
	}
	@font-face {
		font-family: 'Times';
		src: url('/fonts/times.woff') format('woff');
	}

	.bright-fade {
		animation: bright 2s ease-in-out;
	}
	@keyframes bright {
		0% {
			opacity: 0;
			filter: blur(20px);
		}
		10% {
			opacity: 1;
			filter: brightness(2) blur(10px);
		}
	}
	.to-return-up {
		opacity: 0;
		transform: translateY(100%);
		transition: all 1s ease-in-out;
	}
	.to-return-down {
		opacity: 0;
		transform: translateY(-100%);
		transition: all 2s ease-in-out;
	}
	.return {
		animation: forwards;
		animation-delay: 1s;
		transform: translateY(0);
		opacity: 1;
	}
	.to-the-left {
		transform: translateX(-100%) ;
		opacity: 0;
		transition: all 1s ease-in-out;
	}
	.to-the-right {
		transform: translateX(100%);
		opacity: 0;
		transition: all 1s ease-in-out;
	}
	.go-back {
		transform: translateX(0%);
		opacity: 1;
	}
	.delay-1 {
		transition-delay: 0.5s;
	}
	.delay-2 {
		transition-delay: 1s;
	}


</style>

<script>
	const returns = document.querySelectorAll('.to-return-down, .to-return-up');
	const pics = document.querySelectorAll('.bright');
	const flowers = document.querySelectorAll('.flowers');
	const sides = document.querySelectorAll('.to-the-left, .to-the-right');
	
	let observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				entry.target.classList.add('return');
				observer.unobserve(entry.target);
			} else {
				entry.target.classList.remove('return');
			}
		});
	});
	returns.forEach((returnElement) => {
		observer.observe(returnElement);
	});

	let observerPics = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				entry.target.classList.add('bright-fade');
				observerPics.unobserve(entry.target);
			} else {
				entry.target.classList.remove('bright-fade');
			}
		});
	});
	pics.forEach((pic) => {
		observerPics.observe(pic);
	});

	let observerFlowers = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				entry.target.classList.add('flower-back');
				observerFlowers.unobserve(entry.target);
			} else {
				entry.target.classList.remove('flower-back');
			}
		});
	});
	flowers.forEach((flower) => {
		observerFlowers.observe(flower);
	});

	let observerSides = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				entry.target.classList.add('go-back');
				observerSides.unobserve(entry.target);
			} else {
				entry.target.classList.remove('go-back');
			}
		});
	});
	sides.forEach((side) => {
		observerSides.observe(side);
	});
</script>